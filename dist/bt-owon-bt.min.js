(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.OwonBT=f()}})(function(){var define,module,exports;return function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r}()({1:[function(require,module,exports){(function(root,definition){"use strict";if(typeof define==="function"&&define.amd){define(definition)}else if(typeof module==="object"&&module.exports){module.exports=definition()}else{root.log=definition()}})(this,function(){"use strict";var noop=function(){};var undefinedType="undefined";var isIE=typeof window!==undefinedType&&typeof window.navigator!==undefinedType&&/Trident\/|MSIE /.test(window.navigator.userAgent);var logMethods=["trace","debug","info","warn","error"];function bindMethod(obj,methodName){var method=obj[methodName];if(typeof method.bind==="function"){return method.bind(obj)}else{try{return Function.prototype.bind.call(method,obj)}catch(e){return function(){return Function.prototype.apply.apply(method,[obj,arguments])}}}}function traceForIE(){if(console.log){if(console.log.apply){console.log.apply(console,arguments)}else{Function.prototype.apply.apply(console.log,[console,arguments])}}if(console.trace)console.trace()}function realMethod(methodName){if(methodName==="debug"){methodName="log"}if(typeof console===undefinedType){return false}else if(methodName==="trace"&&isIE){return traceForIE}else if(console[methodName]!==undefined){return bindMethod(console,methodName)}else if(console.log!==undefined){return bindMethod(console,"log")}else{return noop}}function replaceLoggingMethods(level,loggerName){for(var i=0;i<logMethods.length;i++){var methodName=logMethods[i];this[methodName]=i<level?noop:this.methodFactory(methodName,level,loggerName)}this.log=this.debug}function enableLoggingWhenConsoleArrives(methodName,level,loggerName){return function(){if(typeof console!==undefinedType){replaceLoggingMethods.call(this,level,loggerName);this[methodName].apply(this,arguments)}}}function defaultMethodFactory(methodName,level,loggerName){return realMethod(methodName)||enableLoggingWhenConsoleArrives.apply(this,arguments)}function Logger(name,defaultLevel,factory){var self=this;var currentLevel;defaultLevel=defaultLevel==null?"WARN":defaultLevel;var storageKey="loglevel";if(typeof name==="string"){storageKey+=":"+name}else if(typeof name==="symbol"){storageKey=undefined}function persistLevelIfPossible(levelNum){var levelName=(logMethods[levelNum]||"silent").toUpperCase();if(typeof window===undefinedType||!storageKey)return;try{window.localStorage[storageKey]=levelName;return}catch(ignore){}try{window.document.cookie=encodeURIComponent(storageKey)+"="+levelName+";"}catch(ignore){}}function getPersistedLevel(){var storedLevel;if(typeof window===undefinedType||!storageKey)return;try{storedLevel=window.localStorage[storageKey]}catch(ignore){}if(typeof storedLevel===undefinedType){try{var cookie=window.document.cookie;var location=cookie.indexOf(encodeURIComponent(storageKey)+"=");if(location!==-1){storedLevel=/^([^;]+)/.exec(cookie.slice(location))[1]}}catch(ignore){}}if(self.levels[storedLevel]===undefined){storedLevel=undefined}return storedLevel}function clearPersistedLevel(){if(typeof window===undefinedType||!storageKey)return;try{window.localStorage.removeItem(storageKey);return}catch(ignore){}try{window.document.cookie=encodeURIComponent(storageKey)+"=; expires=Thu, 01 Jan 1970 00:00:00 UTC"}catch(ignore){}}self.name=name;self.levels={TRACE:0,DEBUG:1,INFO:2,WARN:3,ERROR:4,SILENT:5};self.methodFactory=factory||defaultMethodFactory;self.getLevel=function(){return currentLevel};self.setLevel=function(level,persist){if(typeof level==="string"&&self.levels[level.toUpperCase()]!==undefined){level=self.levels[level.toUpperCase()]}if(typeof level==="number"&&level>=0&&level<=self.levels.SILENT){currentLevel=level;if(persist!==false){persistLevelIfPossible(level)}replaceLoggingMethods.call(self,level,name);if(typeof console===undefinedType&&level<self.levels.SILENT){return"No console available for logging"}}else{throw"log.setLevel() called with invalid level: "+level}};self.setDefaultLevel=function(level){defaultLevel=level;if(!getPersistedLevel()){self.setLevel(level,false)}};self.resetLevel=function(){self.setLevel(defaultLevel,false);clearPersistedLevel()};self.enableAll=function(persist){self.setLevel(self.levels.TRACE,persist)};self.disableAll=function(persist){self.setLevel(self.levels.SILENT,persist)};var initialLevel=getPersistedLevel();if(initialLevel==null){initialLevel=defaultLevel}self.setLevel(initialLevel,false)}var defaultLogger=new Logger;var _loggersByName={};defaultLogger.getLogger=function getLogger(name){if(typeof name!=="symbol"&&typeof name!=="string"||name===""){throw new TypeError("You must supply a name when creating a logger.")}var logger=_loggersByName[name];if(!logger){logger=_loggersByName[name]=new Logger(name,defaultLogger.getLevel(),defaultLogger.methodFactory)}return logger};var _log=typeof window!==undefinedType?window.log:undefined;defaultLogger.noConflict=function(){if(typeof window!==undefinedType&&window.log===defaultLogger){window.log=_log}return defaultLogger};defaultLogger.getLoggers=function getLoggers(){return _loggersByName};defaultLogger["default"]=defaultLogger;return defaultLogger})},{}],2:[function(require,module,exports){"use strict";const log=require("loglevel");const BT=require("./webbluetooth");const utils=require("./utils");const State=BT.State;const btState=BT.btState;async function Start(){log.info("Start called...");if(!btState.started){btState.state=State.NOT_CONNECTED;BT.stateMachine()}else if(btState.state==State.ERROR){btState.state=State.NOT_CONNECTED}await utils.waitFor(()=>btState.state==State.IDLE||btState.state==State.STOPPED);log.info("Pairing completed, state :",btState.state);return btState.state!=State.STOPPED}async function Stop(){log.info("Stop request received");btState.stopRequest=true;await utils.sleep(100);while(btState.started||btState.state!=State.STOPPED&&btState.state!=State.NOT_CONNECTED){btState.stopRequest=true;await utils.sleep(100)}btState.command=null;btState.stopRequest=false;log.warn("Stopped on request.");return true}exports.Start=Start;exports.Stop=Stop;exports.stateMachine=BT.stateMachine;exports.btState=BT.btState;exports.State=BT.State},{"./utils":3,"./webbluetooth":4,loglevel:1}],3:[function(require,module,exports){"use strict";let sleep=ms=>new Promise(r=>setTimeout(r,ms));let waitFor=async function waitFor(f){while(!f())await sleep(100+Math.random()*25);return f()};let waitForTimeout=async function waitFor(f,timeoutSec){var totalTimeMs=0;while(!f()&&totalTimeMs<timeoutSec*1e3){var delayMs=100+Math.random()*25;totalTimeMs+=delayMs;await sleep(delayMs)}return f()};function Parse(enumtype,enumvalue){for(var enumName in enumtype){if(enumtype[enumName]==enumvalue){return eval([enumtype+"."+enumName])}}return null}function buf2hex(buffer){return[...new Uint8Array(buffer)].map(x=>x.toString(16).padStart(2,"0")).join(" ")}function hex2buf(input){if(typeof input!=="string"){throw new TypeError("Expected input to be a string")}var hexstr=input.replace(/\s+/g,"");if(hexstr.length%2!==0){throw new RangeError("Expected string to be an even number of characters")}const view=new Uint8Array(hexstr.length/2);for(let i=0;i<hexstr.length;i+=2){view[i/2]=parseInt(hexstr.substring(i,i+2),16)}return view.buffer}module.exports={sleep:sleep,waitFor:waitFor,waitForTimeout:waitForTimeout,Parse:Parse,buf2hex:buf2hex,hex2buf:hex2buf}},{}],4:[function(require,module,exports){"use strict";const log=require("loglevel");const utils=require("./utils");var simulation=false;const BlueToothOWON={ServiceUuid:"0000fff0-0000-1000-8000-00805f9b34fb",NotificationsUuid:"0000fff4-0000-1000-8000-00805f9b34fb"};const State={NOT_CONNECTED:"Not connected",CONNECTING:"Bluetooth device pairing...",DEVICE_PAIRED:"Device paired",SUBSCRIBING:"Bluetooth interfaces connecting...",IDLE:"Idle",BUSY:"Busy",ERROR:"Error",STOPPING:"Closing BT interfaces...",STOPPED:"Stopped",METER_INIT:"Meter connected",METER_INITIALIZING:"Reading meter state..."};class APIState{constructor(){this.state=State.NOT_CONNECTED;this.prev_state=State.NOT_CONNECTED;this.state_cpt=0;this.started=false;this.stopRequest=false;this.response=null;this.parsedResponse=null;this.formattedResponse="";this.charRead=null;this.btService=null;this.btDevice=null;this.stats={requests:0,responses:0,modbus_errors:0,"GATT disconnects":0,exceptions:0,subcribes:0,commands:0,responseTime:0,lastResponseTime:0,last_connect:new Date(2020,1,1).toISOString()};this.options={forceDeviceSelection:true}}}let btState=new APIState;async function stateMachine(){var nextAction;var DELAY_MS=simulation?20:750;var TIMEOUT_MS=simulation?1e3:3e4;btState.started=true;log.debug("Current state:"+btState.state);if(btState.state==btState.prev_state){btState.state_cpt++}else{btState.state_cpt=0}if(btState.stopRequest){btState.state=State.STOPPING}log.debug("State:"+btState.state);switch(btState.state){case State.NOT_CONNECTED:if(simulation){nextAction=fakePairDevice}else{nextAction=btPairDevice}break;case State.CONNECTING:nextAction=undefined;break;case State.DEVICE_PAIRED:if(simulation){nextAction=fakeSubscribe}else{nextAction=btSubscribe}break;case State.SUBSCRIBING:nextAction=undefined;if(btState.state_cpt>TIMEOUT_MS/DELAY_MS){log.warn("Timeout in SUBSCRIBING");btState.state=State.DEVICE_PAIRED;btState.state_cpt=0}break;case State.METER_INIT:nextAction=meterInit;break;case State.METER_INITIALIZING:if(btState.state_cpt>TIMEOUT_MS/DELAY_MS){log.warn("Timeout in METER_INITIALIZING");if(simulation){nextAction=fakeSubscribe}else{nextAction=btSubscribe}btState.state_cpt=0}nextAction=undefined;break;case State.IDLE:if(btState.command!=null)nextAction=processCommand;else{nextAction=refresh}break;case State.ERROR:nextAction=disconnect;break;case State.BUSY:if(btState.state_cpt>TIMEOUT_MS/DELAY_MS){log.warn("Timeout in BUSY");if(simulation){nextAction=fakeSubscribe}else{nextAction=btSubscribe}btState.state_cpt=0}nextAction=undefined;break;case State.STOPPING:nextAction=disconnect;break;case State.STOPPED:nextAction=undefined;break;default:break}btState.prev_state=btState.state;if(nextAction!=undefined){log.debug("\tExecuting:"+nextAction.name);try{await nextAction()}catch(e){log.error("Exception in state machine",e)}}if(btState.state!=State.STOPPED){utils.sleep(DELAY_MS).then(()=>stateMachine())}else{log.debug("\tTerminating State machine");btState.started=false}}async function processCommand(){try{command.error=false;command.pending=false;btState.command=null;btState.state=State.IDLE;log.debug("\t\tCompleted command executed")}catch(err){log.error("** error while executing command: "+err);btState.state=State.METER_INIT;btState.stats["exceptions"]++;if(err instanceof modbus.ModbusError)btState.stats["modbus_errors"]++;return}}async function meterInit(){btState.state=State.IDLE}async function disconnect(){btState.command=null;try{if(btState.btDevice!=null){if(btState.btDevice?.gatt?.connected){log.warn("* Calling disconnect on btdevice");btState.btDevice.removeEventListener("gattserverdisconnected",onDisconnected);btState.btDevice.gatt.disconnect()}}btState.btService=null}catch{}btState.state=State.STOPPED}async function onDisconnected(){log.warn("* GATT Server disconnected event, will try to reconnect *");btState.btService=null;btState.stats["GATT disconnects"]++;btState.state=State.DEVICE_PAIRED}function arrayBufferConcat(){var length=0;var buffer=null;for(var i in arguments){buffer=arguments[i];length+=buffer.byteLength}var joined=new Uint8Array(length);var offset=0;for(i in arguments){buffer=arguments[i];joined.set(new Uint8Array(buffer),offset);offset+=buffer.byteLength}return joined.buffer}function handleNotifications(event){let value=event.target.value;if(value!=null){log.debug("<< "+utils.buf2hex(value.buffer));if(btState.response!=null){btState.response=arrayBufferConcat(btState.response,value.buffer)}else{btState.response=value.buffer.slice()}}}const DCV=0;const ACV=1;const DCA=2;const ACA=3;const Ohm=4;const Cap=5;const Hz=6;const Duty=7;const TempC=8;const TempF=9;const Diode=10;const Continuity=11;const hFE=12;function formatParsedResponse(fun,measurement,scale,overload){var measure="?";var units="";switch(fun){case DCV:measure="Vdc=";units="V";break;case ACV:measure="Vac=";units="V";break;case DCA:measure="Idc=";units="A";break;case ACA:units="Iac=";units="A";break;case Ohm:measure="R=";units="Ohms";break;case Cap:measure="C=";units="F";break;case Hz:measure="Frequency=";units="Hz";break;case Duty:measure="Duty=";units="%";break;case TempC:measure="Temperature=";units="°C";break;case TempF:measure="Temperature=";units="F";break;case Diode:measure="Diode=";units="V";break;case Continuity:measure="Continuity=";units="Ohms";break;case hFE:measure="hFE=";units="";break;default:measure="?=";units="?";break}switch(scale){case 0:case 1:scale="n";break;case 2:scale="micro";break;case 3:scale="m";break;case 4:scale="";break;case 5:scale="kilo";break;case 6:scale="mega";break}if(overload){return measure+" **OVERLOAD** "+scale+units}else{return measure+measurement+" "+scale+units}}function parseResponse(buffer){let value=new DataView(buffer);var measurement=NaN;var func=value.getUint16(0,true)>>6&15;var decimal=value.getUint8(0)&7;var scale=value.getUint8(0)>>3&7;var uint16val=value.getUint8(4)+256*value.getUint8(5);if(uint16val<32767){measurement=uint16val/Math.pow(10,decimal)}else{measurement=-1*(uint16val&32767)/Math.pow(10,decimal)}var overload=decimal==7;btState.parsedResponse={Function:func,Measurement:measurement,Scale:scale,Overload:overload};btState.formattedResponse=formatParsedResponse(func,measurement,scale,overload)}async function btPairDevice(){btState.state=State.CONNECTING;var forceSelection=true;log.debug("btPairDevice("+forceSelection+")");try{if(typeof navigator.bluetooth?.getAvailability=="function"){const availability=await navigator.bluetooth.getAvailability();if(!availability){log.error("Bluetooth not available in browser.");throw new Error("Browser does not provide bluetooth")}}var device=null;if(device==null){device=await navigator.bluetooth.requestDevice({acceptAllDevices:true,optionalServices:[BlueToothOWON.ServiceUuid]})}btState.btDevice=device;btState.state=State.DEVICE_PAIRED;log.info("Bluetooth device "+device.name+" connected.");await utils.sleep(500)}catch(err){log.warn("** error while connecting: "+err.message);btState.btService=null;if(btState.charRead!=null){try{btState.charRead.stopNotifications()}catch(error){}}btState.charRead=null;btState.state=State.ERROR;btState.stats["exceptions"]++}}async function fakePairDevice(){btState.state=State.CONNECTING;var forceSelection=true;log.debug("fakePairDevice("+forceSelection+")");try{var device={name:"FakeBTDevice",gatt:{connected:true}};btState.btDevice=device;btState.state=State.DEVICE_PAIRED;log.info("Bluetooth device "+device.name+" connected.");await utils.sleep(50)}catch(err){log.warn("** error while connecting: "+err.message);btState.btService=null;btState.charRead=null;btState.state=State.ERROR;btState.stats["exceptions"]++}}async function btSubscribe(){try{btState.state=State.SUBSCRIBING;btState.stats["subcribes"]++;let device=btState.btDevice;let server=null;if(!device?.gatt?.connected){log.debug(`Connecting to GATT Server on ${device.name}...`);device.addEventListener("gattserverdisconnected",onDisconnected);try{if(btState.btService?.connected){btState.btService.disconnect();btState.btService=null;await utils.sleep(100)}}catch(err){}server=await device.gatt.connect();log.debug("> Found GATT server")}else{log.debug("GATT already connected");server=device.gatt}btState.btService=await server.getPrimaryService(BlueToothOWON.ServiceUuid);if(btState.btService==null)throw new Error("GATT Service request failed");log.debug("> Found Owon service");btState.charRead=await btState.btService.getCharacteristic(BlueToothOWON.NotificationsUuid);log.debug("> Found notifications characteristic");btState.response=null;btState.charRead.addEventListener("characteristicvaluechanged",handleNotifications);btState.charRead.startNotifications();log.info("> Bluetooth interfaces ready.");btState.stats["last_connect"]=(new Date).toISOString();await utils.sleep(50);btState.state=State.METER_INIT}catch(err){log.warn("** error while subscribing: "+err.message);if(btState.charRead!=null){try{if(btState.btDevice?.gatt?.connected){btState.charRead.stopNotifications()}btState.btDevice?.gatt.disconnect()}catch(error){}}btState.charRead=null;btState.state=State.DEVICE_PAIRED;btState.stats["exceptions"]++}}async function fakeSubscribe(){try{btState.state=State.SUBSCRIBING;btState.stats["subcribes"]++;let device=btState.btDevice;let server=null;if(!device?.gatt?.connected){log.debug(`Connecting to GATT Server on ${device.name}...`);device["gatt"]["connected"]=true;log.debug("> Found GATT server")}else{log.debug("GATT already connected");server=device.gatt}btState.btService={};log.debug("> Found Serial service");btState.charRead={};log.debug("> Found read characteristic");btState.response=null;log.info("> Bluetooth interfaces ready.");btState.stats["last_connect"]=(new Date).toISOString();await utils.sleep(10);btState.state=State.METER_INIT}catch(err){log.warn("** error while subscribing: "+err.message);btState.charRead=null;btState.state=State.DEVICE_PAIRED;btState.stats["exceptions"]++}}async function refresh(){btState.state=State.BUSY;try{if(btState!=null)parseResponse(btState.response);btState.response=null;log.debug("\t\tFinished refreshing current state")}catch(err){log.warn("** error while refreshing: "+err.message)}btState.state=State.IDLE}function SetSimulation(value){simulation=value}module.exports={stateMachine:stateMachine,SetSimulation:SetSimulation,btState:btState,State:State}},{"./utils":3,loglevel:1}]},{},[2])(2)});